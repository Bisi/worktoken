<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>Getting Started</title>
    <section>
        <title>Hello World!</title>
        <section>
            <title>The process: diagram</title>
            <figure>
                <title>Hello World process diagram</title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="helloworld.jpg"/>
                    </imageobject>
                </mediaobject>
            </figure>
        </section>
        <section>
            <title>The process: XML</title>
            <programlisting language="xml">&lt;definitions id="HelloWorld" targetNamespace="http://www.omg.org/bpmn20"
             xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL">

    &lt;process id="helloWorld" name="Hello World"><co xml:id="helloWorld-process-co" linkends="co-helloWorld-process"/>
        &lt;startEvent id="start" name="Start">
            &lt;outgoing>start2sayHello&lt;/outgoing>
        &lt;/startEvent>
        &lt;userTask id="sayHello" name="Say Hello">
            &lt;documentation>Say "Hello, World!"&lt;/documentation>
            &lt;incoming>start2sayHello&lt;/incoming>
            &lt;outgoing>sayHello2end&lt;/outgoing>
        &lt;/userTask>
        &lt;sequenceFlow id="start2sayHello" sourceRef="start" targetRef="sayHello"/>
        &lt;endEvent id="end" name="End">
            &lt;incoming>sayHello2end&lt;/incoming>
        &lt;/endEvent>
        &lt;sequenceFlow id="sayHello2end" sourceRef="sayHello" targetRef="end" />
    &lt;/process>

&lt;/definitions>                
            </programlisting>
            <calloutlist>
                <callout arearefs="helloWorld-process-co" xml:id="co-helloWorld-process">
                    <para>Any flow element, such as process, task, gateway may have both <emphasis role="italic">id</emphasis> and <emphasis role="italic">name</emphasis>
                        attributes. The <emphasis role="italic">id</emphasis> attribute is used to
                        uniquely identify elements. It is required if the element is to be
                        referenced by another element. The <emphasis role="italic">name</emphasis>
                        attribute serves as descriptive name of the element. When referencing BPMN
                        elements from Work Token annotations <emphasis role="italic">id</emphasis>
                        is preferred reference type, because it must be unique. However, not all
                        BPMN diagram editors allow setting custom values for <emphasis role="italic">id</emphasis> attributes. Some editors may even regenerate ids on each
                        update of the diagram. This is why Work Token annotations may use <emphasis role="italic">name</emphasis> attribute instead of <emphasis role="italic">id</emphasis>.</para>
                </callout>
            </calloutlist>
        </section>
        <section>
            <title>Java code</title>
            <programlisting language="java">
@FlowElement(nodeRef = "sayHello", processId = "helloWorld")
@Entity
public class SayHello extends UserTask {<co xml:id="helloWorld-Java-SayHello-co" linkends="co-helloWorld-Java-SayHello"/>

    @Override
    public void tokenIn(WorkToken token, Connector connector) {
        System.out.println("User task \"" + getSubject() + "\" (" + getId() +
                           ") is ready. Description: " + getDocumentation());
    }

    public void complete() {
        System.out.println("Hello, World");
        tokenOut();
    }

}

public class HelloWorldApp {

    public static void main(String[] args) throws SQLException, InterruptedException, IOException {

        LogManager.getLogManager().readConfiguration(LogManager.class.getResourceAsStream("/logging.properties"));
        Connection connection = DriverManager.getConnection("jdbc:hsqldb:mem:helloworld", "sa", "");
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("helloWorldPU");

        // Prepare and verify annotation library
        List&lt;Class> annotatedClasses = new ArrayList&lt;Class>();
        annotatedClasses.add(SayHello.class);
        ClassListAnnotationDictionary dictionary = new ClassListAnnotationDictionary(annotatedClasses);
        dictionary.build();

        // Create work session and load process definition
        WorkSessionImpl session = new WorkSessionImpl("com.worktoken.helloworld", emf, dictionary);
        session.readDefinitions(HelloWorldApp.class.getResourceAsStream("helloworld.bpmn"));

        // Create process
        session.createProcess("helloWorld");

        // Allow the process to reach User Task node (Say Hello)
        Thread.sleep(1000);

        // Fetch the task
        SayHello sayHello = (SayHello) session.getUserTasks().get(0);

        // Complete user task
        sayHello.complete();

        // Allow the process to finish
        Thread.sleep(1000);

        // Clean up: close session, entity manager factory and shutdown database
        session.close();
        if (emf != null) {
            emf.close();
        }
        connection.createStatement().execute("SHUTDOWN");
    }
}
            </programlisting>
            <para>Work Token provides default implementation of BPMN user task activity -
                the UserTask class. The class provides several convenience methods and
                serves as a base class for process specific user task objects. SayHello
                extends the UserTask 
                and since it is annotated as FlowElement, it will be
                automatically instantiated every time process with id "helloWorld" reaches
                the node with id "sayHello". </para>
            <para>Please note that both UserTask and SayHello classes are JPA entities, this
                ensures that SayHello object instance will be persisted in a
                database.</para>
            
            <calloutlist>
                <callout arearefs="helloWorld-Java-SayHello-co" xml:id="co-helloWorld-Java-SayHello">
                    <para>Work Token provides default implementation of BPMN user task activity -
                        the UserTask class. The class provides several convenience methods and
                        serves as a base class for process specific user task objects. SayHello
                        extends the UserTask and since it is annotated as FlowElement, it will be
                        automatically instantiated every time process with id "helloWorld" reaches
                        the node with id "sayHello". </para>
                    <para>Please note that both UserTask and SayHello classes are JPA entities, this
                        ensures that SayHello object instance will be persisted in a
                        database.</para>
                </callout>
            </calloutlist>
        </section>
    </section>
</chapter>
